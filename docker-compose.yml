version: '3.8'

services:
  # Infrastructure Services
  
  neo4j:
    image: neo4j:5.15
    container_name: advanced-memory-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/advancedmemory123
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2g
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p advancedmemory123 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - advanced-memory-net

  qdrant:
    image: qdrant/qdrant:v1.7.0
    container_name: advanced-memory-qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # gRPC
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    volumes:
      - qdrant-storage:/qdrant/storage
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - advanced-memory-net

  redis:
    image: redis:7.2-alpine
    container_name: advanced-memory-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - advanced-memory-net

  seq:
    image: datalust/seq:2024.1
    container_name: advanced-memory-seq
    ports:
      - "5341:5341"  # Ingestion
      - "5342:80"    # UI
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=
    volumes:
      - seq-data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5341/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - advanced-memory-net

  jaeger:
    image: jaegertracing/all-in-one:1.53
    container_name: advanced-memory-jaeger
    ports:
      - "6831:6831/udp"  # Jaeger agent
      - "16686:16686"    # Jaeger UI
      - "14268:14268"    # Jaeger collector
      - "4317:4317"      # OTLP gRPC
      - "4318:4318"      # OTLP HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:14269/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - advanced-memory-net

  # Application Services

  mcp-server:
    build:
      context: .
      dockerfile: docker/mcp-server/Dockerfile
    container_name: advanced-memory-mcp-server
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__Neo4j=bolt://neo4j:7687
      - ConnectionStrings__Qdrant=http://qdrant:6333
      - Logging__Seq__ServerUrl=http://seq:5341
      - OpenTelemetry__Jaeger__AgentHost=jaeger
      - OpenTelemetry__Jaeger__AgentPort=6831
      - ServiceUrls__GraphRAG=http://graphrag-service:8081
      - ServiceUrls__Memory=http://memory-service:8082
      - ServiceUrls__Grounding=http://grounding-service:8083
      - ServiceUrls__Orchestration=http://orchestration-service:8084
    depends_on:
      - redis
      - neo4j
      - qdrant
      - seq
      - jaeger
      - graphrag-service
      - memory-service
      - grounding-service
      - orchestration-service
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - advanced-memory-net

  graphrag-service:
    build:
      context: .
      dockerfile: docker/graphrag-service/Dockerfile
    container_name: advanced-memory-graphrag-service
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Neo4j=bolt://neo4j:7687
      - ConnectionStrings__Redis=redis:6379
      - Logging__Seq__ServerUrl=http://seq:5341
      - OpenTelemetry__Jaeger__AgentHost=jaeger
      - OpenTelemetry__Jaeger__AgentPort=6831
      - OpenAI__ApiKey=${OPENAI_API_KEY}
    depends_on:
      - neo4j
      - redis
      - seq
      - jaeger
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - advanced-memory-net

  memory-service:
    build:
      context: .
      dockerfile: docker/memory-service/Dockerfile
    container_name: advanced-memory-memory-service
    ports:
      - "8082:8082"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Qdrant=http://qdrant:6333
      - ConnectionStrings__Redis=redis:6379
      - Logging__Seq__ServerUrl=http://seq:5341
      - OpenTelemetry__Jaeger__AgentHost=jaeger
      - OpenTelemetry__Jaeger__AgentPort=6831
      - OpenAI__ApiKey=${OPENAI_API_KEY}
    depends_on:
      - qdrant
      - redis
      - seq
      - jaeger
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - advanced-memory-net

  grounding-service:
    build:
      context: .
      dockerfile: docker/grounding-service/Dockerfile
    container_name: advanced-memory-grounding-service
    ports:
      - "8083:8083"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Redis=redis:6379
      - Logging__Seq__ServerUrl=http://seq:5341
      - OpenTelemetry__Jaeger__AgentHost=jaeger
      - OpenTelemetry__Jaeger__AgentPort=6831
      - OpenAI__ApiKey=${OPENAI_API_KEY}
    depends_on:
      - redis
      - seq
      - jaeger
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - advanced-memory-net

  orchestration-service:
    build:
      context: .
      dockerfile: docker/orchestration-service/Dockerfile
    container_name: advanced-memory-orchestration-service
    ports:
      - "8084:8084"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Redis=redis:6379
      - Logging__Seq__ServerUrl=http://seq:5341
      - OpenTelemetry__Jaeger__AgentHost=jaeger
      - OpenTelemetry__Jaeger__AgentPort=6831
      - ServiceUrls__GraphRAG=http://graphrag-service:8081
      - ServiceUrls__Memory=http://memory-service:8082
      - ServiceUrls__Grounding=http://grounding-service:8083
    depends_on:
      - redis
      - seq
      - jaeger
      - graphrag-service
      - memory-service
      - grounding-service
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8084/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - advanced-memory-net

  dashboard:
    build:
      context: .
      dockerfile: docker/dashboard/Dockerfile
    container_name: advanced-memory-dashboard
    ports:
      - "8090:80"
    environment:
      - API_BASE_URL=http://mcp-server:8080
    depends_on:
      - mcp-server
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - advanced-memory-net

volumes:
  neo4j-data:
  neo4j-logs:
  qdrant-storage:
  redis-data:
  seq-data:

networks:
  advanced-memory-net:
    driver: bridge
