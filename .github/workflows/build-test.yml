name: Build and Test

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Display .NET info
      run: dotnet --info
        
    - name: Restore dependencies
      run: dotnet restore AdvancedMemory.sln
      
    - name: Build solution
      run: |
        dotnet build AdvancedMemory.sln \
          --configuration Release \
          --no-restore \
          /p:TreatWarningsAsErrors=true \
          /p:ContinuousIntegrationBuild=true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          **/bin/Release/**
          !**/bin/Release/**/ref/**
        retention-days: 7

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore AdvancedMemory.sln
      
    - name: Run tests with coverage
      run: |
        dotnet test AdvancedMemory.sln \
          --configuration Release \
          --no-restore \
          --verbosity normal \
          --collect:"XPlat Code Coverage" \
          --results-directory ./coverage \
          --logger "trx;LogFileName=test-results.trx" \
          --logger "GitHubActions;summary.includePassedTests=true" \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/TestResults/**/*.trx
          ./coverage/**/*.xml
        retention-days: 30
        
    - name: Publish test results summary
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results
        path: '**/*.trx'
        reporter: dotnet-trx
        fail-on-error: true
    
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore AdvancedMemory.sln
    
    - name: Install dotnet format
      run: dotnet tool install -g dotnet-format || true
      
    - name: Run dotnet format
      run: |
        dotnet format AdvancedMemory.sln \
          --verify-no-changes \
          --verbosity diagnostic

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore AdvancedMemory.sln
      
    - name: Run security scan
      run: |
        dotnet list AdvancedMemory.sln package --vulnerable --include-transitive 2>&1 | tee security-scan.log
        
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan
        path: security-scan.log
        retention-days: 30
